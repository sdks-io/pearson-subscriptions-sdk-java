/*
 * PplusSubscriptionPapiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.example.www.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for InitialTerm type.
 */
public class InitialTerm {
    private String startDate;
    private String endDate;
    private Integer period;
    private PeriodTypeEnum periodType;
    private TermTypeEnum termType;

    /**
     * Default constructor.
     */
    public InitialTerm() {
    }

    /**
     * Initialization constructor.
     * @param  startDate  String value for startDate.
     * @param  endDate  String value for endDate.
     * @param  period  Integer value for period.
     * @param  periodType  PeriodTypeEnum value for periodType.
     * @param  termType  TermTypeEnum value for termType.
     */
    public InitialTerm(
            String startDate,
            String endDate,
            Integer period,
            PeriodTypeEnum periodType,
            TermTypeEnum termType) {
        this.startDate = startDate;
        this.endDate = endDate;
        this.period = period;
        this.periodType = periodType;
        this.termType = termType;
    }

    /**
     * Getter for StartDate.
     * Start date of the first term, in yyyy-MM-dd'T'HH:mm:ss.SSSZ.
     * @return Returns the String
     */
    @JsonGetter("startDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStartDate() {
        return startDate;
    }

    /**
     * Setter for StartDate.
     * Start date of the first term, in yyyy-MM-dd'T'HH:mm:ss.SSSZ.
     * @param startDate Value for String
     */
    @JsonSetter("startDate")
    public void setStartDate(String startDate) {
        this.startDate = startDate;
    }

    /**
     * Getter for EndDate.
     * End data of a subscription. in yyyy-MM-dd'T'HH:mm:ss.SSSZ.
     * @return Returns the String
     */
    @JsonGetter("endDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEndDate() {
        return endDate;
    }

    /**
     * Setter for EndDate.
     * End data of a subscription. in yyyy-MM-dd'T'HH:mm:ss.SSSZ.
     * @param endDate Value for String
     */
    @JsonSetter("endDate")
    public void setEndDate(String endDate) {
        this.endDate = endDate;
    }

    /**
     * Getter for Period.
     * Duration of the first term in months, years, days, or weeks, depending on the value of the
     * `periodType` field. Only applicable if the value of the `termType` field is `TERMED`.
     * @return Returns the Integer
     */
    @JsonGetter("period")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getPeriod() {
        return period;
    }

    /**
     * Setter for Period.
     * Duration of the first term in months, years, days, or weeks, depending on the value of the
     * `periodType` field. Only applicable if the value of the `termType` field is `TERMED`.
     * @param period Value for Integer
     */
    @JsonSetter("period")
    public void setPeriod(Integer period) {
        this.period = period;
    }

    /**
     * Getter for PeriodType.
     * Unit of time that the renewal term is measured in.
     * @return Returns the PeriodTypeEnum
     */
    @JsonGetter("periodType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PeriodTypeEnum getPeriodType() {
        return periodType;
    }

    /**
     * Setter for PeriodType.
     * Unit of time that the renewal term is measured in.
     * @param periodType Value for PeriodTypeEnum
     */
    @JsonSetter("periodType")
    public void setPeriodType(PeriodTypeEnum periodType) {
        this.periodType = periodType;
    }

    /**
     * Getter for TermType.
     * Type of the first term. If the value of this field is `TERMED`, the first term has a
     * predefined duration based on the value of the `period` field. If the value of this field is
     * `EVERGREEN`, the first term does not have a predefined duration.
     * @return Returns the TermTypeEnum
     */
    @JsonGetter("termType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TermTypeEnum getTermType() {
        return termType;
    }

    /**
     * Setter for TermType.
     * Type of the first term. If the value of this field is `TERMED`, the first term has a
     * predefined duration based on the value of the `period` field. If the value of this field is
     * `EVERGREEN`, the first term does not have a predefined duration.
     * @param termType Value for TermTypeEnum
     */
    @JsonSetter("termType")
    public void setTermType(TermTypeEnum termType) {
        this.termType = termType;
    }

    /**
     * Converts this InitialTerm into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "InitialTerm [" + "startDate=" + startDate + ", endDate=" + endDate + ", period="
                + period + ", periodType=" + periodType + ", termType=" + termType + "]";
    }

    /**
     * Builds a new {@link InitialTerm.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link InitialTerm.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .startDate(getStartDate())
                .endDate(getEndDate())
                .period(getPeriod())
                .periodType(getPeriodType())
                .termType(getTermType());
        return builder;
    }

    /**
     * Class to build instances of {@link InitialTerm}.
     */
    public static class Builder {
        private String startDate;
        private String endDate;
        private Integer period;
        private PeriodTypeEnum periodType;
        private TermTypeEnum termType;



        /**
         * Setter for startDate.
         * @param  startDate  String value for startDate.
         * @return Builder
         */
        public Builder startDate(String startDate) {
            this.startDate = startDate;
            return this;
        }

        /**
         * Setter for endDate.
         * @param  endDate  String value for endDate.
         * @return Builder
         */
        public Builder endDate(String endDate) {
            this.endDate = endDate;
            return this;
        }

        /**
         * Setter for period.
         * @param  period  Integer value for period.
         * @return Builder
         */
        public Builder period(Integer period) {
            this.period = period;
            return this;
        }

        /**
         * Setter for periodType.
         * @param  periodType  PeriodTypeEnum value for periodType.
         * @return Builder
         */
        public Builder periodType(PeriodTypeEnum periodType) {
            this.periodType = periodType;
            return this;
        }

        /**
         * Setter for termType.
         * @param  termType  TermTypeEnum value for termType.
         * @return Builder
         */
        public Builder termType(TermTypeEnum termType) {
            this.termType = termType;
            return this;
        }

        /**
         * Builds a new {@link InitialTerm} object using the set fields.
         * @return {@link InitialTerm}
         */
        public InitialTerm build() {
            return new InitialTerm(startDate, endDate, period, periodType, termType);
        }
    }
}
