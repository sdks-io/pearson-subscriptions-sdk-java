/*
 * PearsonSubscriptionsAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.example.www.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for UpdateSubscription type.
 */
public class UpdateSubscription {
    private OrderTypeEnum orderType;
    private String orderNumber;
    private String orderDate;
    private String description;
    private String existingAccountNumber;
    private Account account;
    private List<UpdateSubscriptionSubscription> updateSubscriptionSubscriptions;
    private UpdateSubscriptionProcessingOptions updateSubscriptionProcessingOptions;
    private List<Product> updateSubscriptionProducts;
    private List<CustomField> customFields;
    private Object paymentCapture;

    /**
     * Default constructor.
     */
    public UpdateSubscription() {
    }

    /**
     * Initialization constructor.
     * @param  orderType  OrderTypeEnum value for orderType.
     * @param  orderNumber  String value for orderNumber.
     * @param  orderDate  String value for orderDate.
     * @param  description  String value for description.
     * @param  existingAccountNumber  String value for existingAccountNumber.
     * @param  account  Account value for account.
     * @param  updateSubscriptionSubscriptions  List of UpdateSubscriptionSubscription value for
     *         updateSubscriptionSubscriptions.
     * @param  updateSubscriptionProcessingOptions  UpdateSubscriptionProcessingOptions value for
     *         updateSubscriptionProcessingOptions.
     * @param  updateSubscriptionProducts  List of Product value for updateSubscriptionProducts.
     * @param  customFields  List of CustomField value for customFields.
     * @param  paymentCapture  Object value for paymentCapture.
     */
    public UpdateSubscription(
            OrderTypeEnum orderType,
            String orderNumber,
            String orderDate,
            String description,
            String existingAccountNumber,
            Account account,
            List<UpdateSubscriptionSubscription> updateSubscriptionSubscriptions,
            UpdateSubscriptionProcessingOptions updateSubscriptionProcessingOptions,
            List<Product> updateSubscriptionProducts,
            List<CustomField> customFields,
            Object paymentCapture) {
        this.orderType = orderType;
        this.orderNumber = orderNumber;
        this.orderDate = orderDate;
        this.description = description;
        this.existingAccountNumber = existingAccountNumber;
        this.account = account;
        this.updateSubscriptionSubscriptions = updateSubscriptionSubscriptions;
        this.updateSubscriptionProcessingOptions = updateSubscriptionProcessingOptions;
        this.updateSubscriptionProducts = updateSubscriptionProducts;
        this.customFields = customFields;
        this.paymentCapture = paymentCapture;
    }

    /**
     * Getter for OrderType.
     * Order Type .
     * @return Returns the OrderTypeEnum
     */
    @JsonGetter("orderType")
    public OrderTypeEnum getOrderType() {
        return orderType;
    }

    /**
     * Setter for OrderType.
     * Order Type .
     * @param orderType Value for OrderTypeEnum
     */
    @JsonSetter("orderType")
    public void setOrderType(OrderTypeEnum orderType) {
        this.orderType = orderType;
    }

    /**
     * Getter for OrderNumber.
     * Hybris Order Number.
     * @return Returns the String
     */
    @JsonGetter("orderNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOrderNumber() {
        return orderNumber;
    }

    /**
     * Setter for OrderNumber.
     * Hybris Order Number.
     * @param orderNumber Value for String
     */
    @JsonSetter("orderNumber")
    public void setOrderNumber(String orderNumber) {
        this.orderNumber = orderNumber;
    }

    /**
     * Getter for OrderDate.
     * The date when the order is signed. All the order actions under this order will use this order
     * date as the contract effective date if the contract effective date field is skipped or its
     * value is left as null.
     * @return Returns the String
     */
    @JsonGetter("orderDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOrderDate() {
        return orderDate;
    }

    /**
     * Setter for OrderDate.
     * The date when the order is signed. All the order actions under this order will use this order
     * date as the contract effective date if the contract effective date field is skipped or its
     * value is left as null.
     * @param orderDate Value for String
     */
    @JsonSetter("orderDate")
    public void setOrderDate(String orderDate) {
        this.orderDate = orderDate;
    }

    /**
     * Getter for Description.
     * A description of the order.
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * A description of the order.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for ExistingAccountNumber.
     * The account number that this order will be created under. It can be either the accountNumber
     * or the account info provided.
     * @return Returns the String
     */
    @JsonGetter("existingAccountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getExistingAccountNumber() {
        return existingAccountNumber;
    }

    /**
     * Setter for ExistingAccountNumber.
     * The account number that this order will be created under. It can be either the accountNumber
     * or the account info provided.
     * @param existingAccountNumber Value for String
     */
    @JsonSetter("existingAccountNumber")
    public void setExistingAccountNumber(String existingAccountNumber) {
        this.existingAccountNumber = existingAccountNumber;
    }

    /**
     * Getter for Account.
     * @return Returns the Account
     */
    @JsonGetter("account")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Account getAccount() {
        return account;
    }

    /**
     * Setter for Account.
     * @param account Value for Account
     */
    @JsonSetter("account")
    public void setAccount(Account account) {
        this.account = account;
    }

    /**
     * Getter for UpdateSubscriptionSubscriptions.
     * Each item includes a set of order actions, which will be applied to the same base
     * subscription.
     * @return Returns the List of UpdateSubscriptionSubscription
     */
    @JsonGetter("updateSubscriptionSubscriptions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<UpdateSubscriptionSubscription> getUpdateSubscriptionSubscriptions() {
        return updateSubscriptionSubscriptions;
    }

    /**
     * Setter for UpdateSubscriptionSubscriptions.
     * Each item includes a set of order actions, which will be applied to the same base
     * subscription.
     * @param updateSubscriptionSubscriptions Value for List of UpdateSubscriptionSubscription
     */
    @JsonSetter("updateSubscriptionSubscriptions")
    public void setUpdateSubscriptionSubscriptions(List<UpdateSubscriptionSubscription> updateSubscriptionSubscriptions) {
        this.updateSubscriptionSubscriptions = updateSubscriptionSubscriptions;
    }

    /**
     * Getter for UpdateSubscriptionProcessingOptions.
     * Invoice or Payment.
     * @return Returns the UpdateSubscriptionProcessingOptions
     */
    @JsonGetter("updateSubscriptionProcessingOptions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UpdateSubscriptionProcessingOptions getUpdateSubscriptionProcessingOptions() {
        return updateSubscriptionProcessingOptions;
    }

    /**
     * Setter for UpdateSubscriptionProcessingOptions.
     * Invoice or Payment.
     * @param updateSubscriptionProcessingOptions Value for UpdateSubscriptionProcessingOptions
     */
    @JsonSetter("updateSubscriptionProcessingOptions")
    public void setUpdateSubscriptionProcessingOptions(UpdateSubscriptionProcessingOptions updateSubscriptionProcessingOptions) {
        this.updateSubscriptionProcessingOptions = updateSubscriptionProcessingOptions;
    }

    /**
     * Getter for UpdateSubscriptionProducts.
     * @return Returns the List of Product
     */
    @JsonGetter("updateSubscriptionProducts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Product> getUpdateSubscriptionProducts() {
        return updateSubscriptionProducts;
    }

    /**
     * Setter for UpdateSubscriptionProducts.
     * @param updateSubscriptionProducts Value for List of Product
     */
    @JsonSetter("updateSubscriptionProducts")
    public void setUpdateSubscriptionProducts(List<Product> updateSubscriptionProducts) {
        this.updateSubscriptionProducts = updateSubscriptionProducts;
    }

    /**
     * Getter for CustomFields.
     * Information about the payment related fields.
     * @return Returns the List of CustomField
     */
    @JsonGetter("customFields")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<CustomField> getCustomFields() {
        return customFields;
    }

    /**
     * Setter for CustomFields.
     * Information about the payment related fields.
     * @param customFields Value for List of CustomField
     */
    @JsonSetter("customFields")
    public void setCustomFields(List<CustomField> customFields) {
        this.customFields = customFields;
    }

    /**
     * Getter for PaymentCapture.
     * @return Returns the Object
     */
    @JsonGetter("paymentCapture")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getPaymentCapture() {
        return paymentCapture;
    }

    /**
     * Setter for PaymentCapture.
     * @param paymentCapture Value for Object
     */
    @JsonSetter("paymentCapture")
    public void setPaymentCapture(Object paymentCapture) {
        this.paymentCapture = paymentCapture;
    }

    /**
     * Converts this UpdateSubscription into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UpdateSubscription [" + "orderType=" + orderType + ", orderNumber=" + orderNumber
                + ", orderDate=" + orderDate + ", description=" + description
                + ", existingAccountNumber=" + existingAccountNumber + ", account=" + account
                + ", updateSubscriptionSubscriptions=" + updateSubscriptionSubscriptions
                + ", updateSubscriptionProcessingOptions=" + updateSubscriptionProcessingOptions
                + ", updateSubscriptionProducts=" + updateSubscriptionProducts + ", customFields="
                + customFields + ", paymentCapture=" + paymentCapture + "]";
    }

    /**
     * Builds a new {@link UpdateSubscription.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UpdateSubscription.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(orderType)
                .orderNumber(getOrderNumber())
                .orderDate(getOrderDate())
                .description(getDescription())
                .existingAccountNumber(getExistingAccountNumber())
                .account(getAccount())
                .updateSubscriptionSubscriptions(getUpdateSubscriptionSubscriptions())
                .updateSubscriptionProcessingOptions(getUpdateSubscriptionProcessingOptions())
                .updateSubscriptionProducts(getUpdateSubscriptionProducts())
                .customFields(getCustomFields())
                .paymentCapture(getPaymentCapture());
        return builder;
    }

    /**
     * Class to build instances of {@link UpdateSubscription}.
     */
    public static class Builder {
        private OrderTypeEnum orderType;
        private String orderNumber;
        private String orderDate;
        private String description;
        private String existingAccountNumber;
        private Account account;
        private List<UpdateSubscriptionSubscription> updateSubscriptionSubscriptions;
        private UpdateSubscriptionProcessingOptions updateSubscriptionProcessingOptions;
        private List<Product> updateSubscriptionProducts;
        private List<CustomField> customFields;
        private Object paymentCapture;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  orderType  OrderTypeEnum value for orderType.
         */
        public Builder(OrderTypeEnum orderType) {
            this.orderType = orderType;
        }

        /**
         * Setter for orderType.
         * @param  orderType  OrderTypeEnum value for orderType.
         * @return Builder
         */
        public Builder orderType(OrderTypeEnum orderType) {
            this.orderType = orderType;
            return this;
        }

        /**
         * Setter for orderNumber.
         * @param  orderNumber  String value for orderNumber.
         * @return Builder
         */
        public Builder orderNumber(String orderNumber) {
            this.orderNumber = orderNumber;
            return this;
        }

        /**
         * Setter for orderDate.
         * @param  orderDate  String value for orderDate.
         * @return Builder
         */
        public Builder orderDate(String orderDate) {
            this.orderDate = orderDate;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for existingAccountNumber.
         * @param  existingAccountNumber  String value for existingAccountNumber.
         * @return Builder
         */
        public Builder existingAccountNumber(String existingAccountNumber) {
            this.existingAccountNumber = existingAccountNumber;
            return this;
        }

        /**
         * Setter for account.
         * @param  account  Account value for account.
         * @return Builder
         */
        public Builder account(Account account) {
            this.account = account;
            return this;
        }

        /**
         * Setter for updateSubscriptionSubscriptions.
         * @param  updateSubscriptionSubscriptions  List of UpdateSubscriptionSubscription value for
         *         updateSubscriptionSubscriptions.
         * @return Builder
         */
        public Builder updateSubscriptionSubscriptions(
                List<UpdateSubscriptionSubscription> updateSubscriptionSubscriptions) {
            this.updateSubscriptionSubscriptions = updateSubscriptionSubscriptions;
            return this;
        }

        /**
         * Setter for updateSubscriptionProcessingOptions.
         * @param  updateSubscriptionProcessingOptions  UpdateSubscriptionProcessingOptions value
         *         for updateSubscriptionProcessingOptions.
         * @return Builder
         */
        public Builder updateSubscriptionProcessingOptions(
                UpdateSubscriptionProcessingOptions updateSubscriptionProcessingOptions) {
            this.updateSubscriptionProcessingOptions = updateSubscriptionProcessingOptions;
            return this;
        }

        /**
         * Setter for updateSubscriptionProducts.
         * @param  updateSubscriptionProducts  List of Product value for updateSubscriptionProducts.
         * @return Builder
         */
        public Builder updateSubscriptionProducts(List<Product> updateSubscriptionProducts) {
            this.updateSubscriptionProducts = updateSubscriptionProducts;
            return this;
        }

        /**
         * Setter for customFields.
         * @param  customFields  List of CustomField value for customFields.
         * @return Builder
         */
        public Builder customFields(List<CustomField> customFields) {
            this.customFields = customFields;
            return this;
        }

        /**
         * Setter for paymentCapture.
         * @param  paymentCapture  Object value for paymentCapture.
         * @return Builder
         */
        public Builder paymentCapture(Object paymentCapture) {
            this.paymentCapture = paymentCapture;
            return this;
        }

        /**
         * Builds a new {@link UpdateSubscription} object using the set fields.
         * @return {@link UpdateSubscription}
         */
        public UpdateSubscription build() {
            return new UpdateSubscription(orderType, orderNumber, orderDate, description,
                    existingAccountNumber, account, updateSubscriptionSubscriptions,
                    updateSubscriptionProcessingOptions, updateSubscriptionProducts, customFields,
                    paymentCapture);
        }
    }
}
