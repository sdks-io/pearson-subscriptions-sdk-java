/*
 * PplusSubscriptionPapiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.example.www.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for UpdateOrderOrderAction type.
 */
public class UpdateOrderOrderAction {
    private List<TriggerDate> triggerDates;
    private AddProduct addProduct;
    private RemoveProduct removeProduct;
    private TermsAndConditions termsAndConditions;

    /**
     * Default constructor.
     */
    public UpdateOrderOrderAction() {
    }

    /**
     * Initialization constructor.
     * @param  triggerDates  List of TriggerDate value for triggerDates.
     * @param  addProduct  AddProduct value for addProduct.
     * @param  removeProduct  RemoveProduct value for removeProduct.
     * @param  termsAndConditions  TermsAndConditions value for termsAndConditions.
     */
    public UpdateOrderOrderAction(
            List<TriggerDate> triggerDates,
            AddProduct addProduct,
            RemoveProduct removeProduct,
            TermsAndConditions termsAndConditions) {
        this.triggerDates = triggerDates;
        this.addProduct = addProduct;
        this.removeProduct = removeProduct;
        this.termsAndConditions = termsAndConditions;
    }

    /**
     * Getter for TriggerDates.
     * @return Returns the List of TriggerDate
     */
    @JsonGetter("triggerDates")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<TriggerDate> getTriggerDates() {
        return triggerDates;
    }

    /**
     * Setter for TriggerDates.
     * @param triggerDates Value for List of TriggerDate
     */
    @JsonSetter("triggerDates")
    public void setTriggerDates(List<TriggerDate> triggerDates) {
        this.triggerDates = triggerDates;
    }

    /**
     * Getter for AddProduct.
     * Information about an order action of type `addProduct`. If you want to create a pending order
     * through the "Add product" order action, and if the charge's trigger condition is `Specific
     * Date`, you must set a charge number in the `chargeNumber` field for the "Add product" order
     * action.
     * @return Returns the AddProduct
     */
    @JsonGetter("addProduct")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AddProduct getAddProduct() {
        return addProduct;
    }

    /**
     * Setter for AddProduct.
     * Information about an order action of type `addProduct`. If you want to create a pending order
     * through the "Add product" order action, and if the charge's trigger condition is `Specific
     * Date`, you must set a charge number in the `chargeNumber` field for the "Add product" order
     * action.
     * @param addProduct Value for AddProduct
     */
    @JsonSetter("addProduct")
    public void setAddProduct(AddProduct addProduct) {
        this.addProduct = addProduct;
    }

    /**
     * Getter for RemoveProduct.
     * Remove product details from the subscription plan
     * @return Returns the RemoveProduct
     */
    @JsonGetter("removeProduct")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public RemoveProduct getRemoveProduct() {
        return removeProduct;
    }

    /**
     * Setter for RemoveProduct.
     * Remove product details from the subscription plan
     * @param removeProduct Value for RemoveProduct
     */
    @JsonSetter("removeProduct")
    public void setRemoveProduct(RemoveProduct removeProduct) {
        this.removeProduct = removeProduct;
    }

    /**
     * Getter for TermsAndConditions.
     * change the terms and conditions of a subscription .
     * @return Returns the TermsAndConditions
     */
    @JsonGetter("termsAndConditions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TermsAndConditions getTermsAndConditions() {
        return termsAndConditions;
    }

    /**
     * Setter for TermsAndConditions.
     * change the terms and conditions of a subscription .
     * @param termsAndConditions Value for TermsAndConditions
     */
    @JsonSetter("termsAndConditions")
    public void setTermsAndConditions(TermsAndConditions termsAndConditions) {
        this.termsAndConditions = termsAndConditions;
    }

    /**
     * Converts this UpdateOrderOrderAction into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UpdateOrderOrderAction [" + "triggerDates=" + triggerDates + ", addProduct="
                + addProduct + ", removeProduct=" + removeProduct + ", termsAndConditions="
                + termsAndConditions + "]";
    }

    /**
     * Builds a new {@link UpdateOrderOrderAction.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UpdateOrderOrderAction.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .triggerDates(getTriggerDates())
                .addProduct(getAddProduct())
                .removeProduct(getRemoveProduct())
                .termsAndConditions(getTermsAndConditions());
        return builder;
    }

    /**
     * Class to build instances of {@link UpdateOrderOrderAction}.
     */
    public static class Builder {
        private List<TriggerDate> triggerDates;
        private AddProduct addProduct;
        private RemoveProduct removeProduct;
        private TermsAndConditions termsAndConditions;



        /**
         * Setter for triggerDates.
         * @param  triggerDates  List of TriggerDate value for triggerDates.
         * @return Builder
         */
        public Builder triggerDates(List<TriggerDate> triggerDates) {
            this.triggerDates = triggerDates;
            return this;
        }

        /**
         * Setter for addProduct.
         * @param  addProduct  AddProduct value for addProduct.
         * @return Builder
         */
        public Builder addProduct(AddProduct addProduct) {
            this.addProduct = addProduct;
            return this;
        }

        /**
         * Setter for removeProduct.
         * @param  removeProduct  RemoveProduct value for removeProduct.
         * @return Builder
         */
        public Builder removeProduct(RemoveProduct removeProduct) {
            this.removeProduct = removeProduct;
            return this;
        }

        /**
         * Setter for termsAndConditions.
         * @param  termsAndConditions  TermsAndConditions value for termsAndConditions.
         * @return Builder
         */
        public Builder termsAndConditions(TermsAndConditions termsAndConditions) {
            this.termsAndConditions = termsAndConditions;
            return this;
        }

        /**
         * Builds a new {@link UpdateOrderOrderAction} object using the set fields.
         * @return {@link UpdateOrderOrderAction}
         */
        public UpdateOrderOrderAction build() {
            return new UpdateOrderOrderAction(triggerDates, addProduct, removeProduct,
                    termsAndConditions);
        }
    }
}
