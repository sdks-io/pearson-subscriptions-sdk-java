/*
 * PplusSubscriptionPapiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.example.www.models;

import com.example.www.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;

/**
 * This is a model class for BillingOptions type.
 */
public class BillingOptions {
    private LocalDate documentDate;
    private LocalDate targetDate;

    /**
     * Default constructor.
     */
    public BillingOptions() {
    }

    /**
     * Initialization constructor.
     * @param  documentDate  LocalDate value for documentDate.
     * @param  targetDate  LocalDate value for targetDate.
     */
    public BillingOptions(
            LocalDate documentDate,
            LocalDate targetDate) {
        this.documentDate = documentDate;
        this.targetDate = targetDate;
    }

    /**
     * Getter for DocumentDate.
     * @return Returns the LocalDate
     */
    @JsonGetter("documentDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getDocumentDate() {
        return documentDate;
    }

    /**
     * Setter for DocumentDate.
     * @param documentDate Value for LocalDate
     */
    @JsonSetter("documentDate")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setDocumentDate(LocalDate documentDate) {
        this.documentDate = documentDate;
    }

    /**
     * Getter for TargetDate.
     * For REDEMPTION, it is end of term date
     * @return Returns the LocalDate
     */
    @JsonGetter("targetDate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getTargetDate() {
        return targetDate;
    }

    /**
     * Setter for TargetDate.
     * For REDEMPTION, it is end of term date
     * @param targetDate Value for LocalDate
     */
    @JsonSetter("targetDate")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setTargetDate(LocalDate targetDate) {
        this.targetDate = targetDate;
    }

    /**
     * Converts this BillingOptions into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "BillingOptions [" + "documentDate=" + documentDate + ", targetDate=" + targetDate
                + "]";
    }

    /**
     * Builds a new {@link BillingOptions.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link BillingOptions.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .documentDate(getDocumentDate())
                .targetDate(getTargetDate());
        return builder;
    }

    /**
     * Class to build instances of {@link BillingOptions}.
     */
    public static class Builder {
        private LocalDate documentDate;
        private LocalDate targetDate;



        /**
         * Setter for documentDate.
         * @param  documentDate  LocalDate value for documentDate.
         * @return Builder
         */
        public Builder documentDate(LocalDate documentDate) {
            this.documentDate = documentDate;
            return this;
        }

        /**
         * Setter for targetDate.
         * @param  targetDate  LocalDate value for targetDate.
         * @return Builder
         */
        public Builder targetDate(LocalDate targetDate) {
            this.targetDate = targetDate;
            return this;
        }

        /**
         * Builds a new {@link BillingOptions} object using the set fields.
         * @return {@link BillingOptions}
         */
        public BillingOptions build() {
            return new BillingOptions(documentDate, targetDate);
        }
    }
}
