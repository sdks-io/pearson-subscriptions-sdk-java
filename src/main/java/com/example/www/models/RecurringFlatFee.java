/*
 * PearsonSubscriptionsAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.example.www.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for RecurringFlatFee type.
 */
public class RecurringFlatFee {
    private Double listPrice;

    /**
     * Default constructor.
     */
    public RecurringFlatFee() {
    }

    /**
     * Initialization constructor.
     * @param  listPrice  Double value for listPrice.
     */
    public RecurringFlatFee(
            Double listPrice) {
        this.listPrice = listPrice;
    }

    /**
     * Getter for ListPrice.
     * Only applicable for REDEMPTION to pass another price in addition to product price.
     * @return Returns the Double
     */
    @JsonGetter("listPrice")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getListPrice() {
        return listPrice;
    }

    /**
     * Setter for ListPrice.
     * Only applicable for REDEMPTION to pass another price in addition to product price.
     * @param listPrice Value for Double
     */
    @JsonSetter("listPrice")
    public void setListPrice(Double listPrice) {
        this.listPrice = listPrice;
    }

    /**
     * Converts this RecurringFlatFee into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "RecurringFlatFee [" + "listPrice=" + listPrice + "]";
    }

    /**
     * Builds a new {@link RecurringFlatFee.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link RecurringFlatFee.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .listPrice(getListPrice());
        return builder;
    }

    /**
     * Class to build instances of {@link RecurringFlatFee}.
     */
    public static class Builder {
        private Double listPrice;



        /**
         * Setter for listPrice.
         * @param  listPrice  Double value for listPrice.
         * @return Builder
         */
        public Builder listPrice(Double listPrice) {
            this.listPrice = listPrice;
            return this;
        }

        /**
         * Builds a new {@link RecurringFlatFee} object using the set fields.
         * @return {@link RecurringFlatFee}
         */
        public RecurringFlatFee build() {
            return new RecurringFlatFee(listPrice);
        }
    }
}
